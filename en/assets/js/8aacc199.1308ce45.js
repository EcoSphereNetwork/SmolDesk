"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1480],{28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>c});var s=t(96540);const i={},r=s.createContext(i);function o(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:n},e.children)}},80048:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"docs/testing/index","title":"Testing Strategy","description":"","source":"@site/docs/testing/index.md","sourceDirName":"docs/testing","slug":"/docs/testing/","permalink":"/SmolDesk/en/docs/testing/","draft":false,"unlisted":false,"editUrl":"https://github.com/EcoSphereNetwork/SmolDesk/edit/main/docs/docs/testing/index.md","tags":[],"version":"current","frontMatter":{"title":"Testing Strategy","description":""}}');var i=t(74848),r=t(28453);const o={title:"Testing Strategy",description:""},c="Testing Strategy",d={},a=[{value:"Test Types",id:"test-types",level:2},{value:"Running Tests",id:"running-tests",level:2},{value:"Known Issues",id:"known-issues",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"testing-strategy",children:"Testing Strategy"})}),"\n",(0,i.jsx)(n.p,{children:"The repository contains unit tests for TypeScript and Rust as well as integration and end-to-end tests."}),"\n",(0,i.jsx)(n.h2,{id:"test-types",children:"Test Types"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Unit"})," \u2013 validate isolated functions and components"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Integration"})," \u2013 ensure IPC between frontend and backend works"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"E2E"})," \u2013 run the packaged app and interact via browser automation"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Current coverage focuses on React hooks and a handful of Rust utilities. Additional tests for WebRTC flows are planned."}),"\n",(0,i.jsx)(n.h2,{id:"running-tests",children:"Running Tests"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"npm test          # frontend unit tests\nnpm run e2e       # end-to-end tests\ncd src-tauri && cargo test\n"})}),"\n",(0,i.jsx)(n.h2,{id:"known-issues",children:"Known Issues"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Some WebRTC tests rely on mocked Tauri APIs."}),"\n",(0,i.jsx)(n.li,{children:"Network tests require a local signaling server."}),"\n",(0,i.jsx)(n.li,{children:"Window controls are simulated when using the mock IPC layer."}),"\n",(0,i.jsxs)(n.li,{children:["Vitest is optional and must be installed with ",(0,i.jsx)(n.code,{children:"scripts/install-vitest.sh"})," in Codex environments."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["See ",(0,i.jsx)(n.a,{href:"/SmolDesk/en/docs/testing/ci-overview",children:"CI overview"})," for planned automation steps.\nSee ",(0,i.jsx)(n.a,{href:"/SmolDesk/en/docs/testing/coverage",children:"coverage instructions"})," for generating reports.\nSee ",(0,i.jsx)(n.a,{href:"/SmolDesk/en/docs/testing/playwright",children:"Playwright guide"})," to run E2E tests.\nSee ",(0,i.jsx)(n.a,{href:"/SmolDesk/en/docs/testing/storybook",children:"Storybook guide"})," for UI snapshots and accessibility checks."]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}}}]);