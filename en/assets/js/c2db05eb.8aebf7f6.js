"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3230],{28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>l});var t=s(96540);const i={},r=t.createContext(i);function o(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(r.Provider,{value:n},e.children)}},40223:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"docs/testing/ci-overview","title":"Continuous Integration Overview","description":"","source":"@site/docs/testing/ci-overview.md","sourceDirName":"docs/testing","slug":"/docs/testing/ci-overview","permalink":"/SmolDesk/en/docs/testing/ci-overview","draft":false,"unlisted":false,"editUrl":"https://github.com/EcoSphereNetwork/SmolDesk/edit/main/docs/docs/testing/ci-overview.md","tags":[],"version":"current","frontMatter":{"title":"Continuous Integration Overview","description":""}}');var i=s(74848),r=s(28453);const o={title:"Continuous Integration Overview",description:""},l="Continuous Integration Overview",c={},d=[{value:"Zielsetzung",id:"zielsetzung",level:2},{value:"Tools",id:"tools",level:2},{value:"Strategien",id:"strategien",level:2},{value:"Phasen-Ziele",id:"phasen-ziele",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"continuous-integration-overview",children:"Continuous Integration Overview"})}),"\n",(0,i.jsx)(n.h2,{id:"zielsetzung",children:"Zielsetzung"}),"\n",(0,i.jsx)(n.p,{children:"Automate builds and run tests for every pull request. Lint sources and package artifacts on successful runs."}),"\n",(0,i.jsx)(n.h2,{id:"tools",children:"Tools"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"vitest"})," \u2013 unit tests for React components"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"jest-axe"})," \u2013 accessibility checks"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"playwright"})," (optional) \u2013 end-to-end testing"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"cargo test"})," \u2013 Rust backend tests"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"strategien",children:"Strategien"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Unit-Tests:"})," via ",(0,i.jsx)(n.code,{children:"vitest"})," in a jsdom environment"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Accessibility:"})," optional ",(0,i.jsx)(n.code,{children:"jest-axe"})," checks for UI components"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Integration/IPC:"})," to be added for frontend \u2194 backend communication"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Rust-Tests:"})," run ",(0,i.jsx)(n.code,{children:"cargo test"})," for the Tauri backend"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"CI runs locally for developers and remotely on pull requests. Matrix jobs handle Node and Rust separately. Browser APIs and MediaStream mocks are considered risk areas."}),"\n",(0,i.jsx)(n.h2,{id:"phasen-ziele",children:"Phasen-Ziele"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Lokal"}),": schnelle Testl\xe4ufe und Linting vor Commits"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Remote"}),": komplette CI in GitHub Actions f\xfcr Pull Requests und Merges"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["See ",(0,i.jsx)(n.a,{href:"/SmolDesk/en/docs/development/phase-3-report",children:"Phase 3 Report"})," for the initial CI implementation."]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}}}]);