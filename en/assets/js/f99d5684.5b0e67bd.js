"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2866],{1805:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>a,frontMatter:()=>d,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"api/protocols","title":"Protocols","description":"WebSocket-Nachrichten des Signaling-Servers","source":"@site/api/protocols.md","sourceDirName":"api","slug":"/api/protocols","permalink":"/SmolDesk/en/api/protocols","draft":false,"unlisted":false,"editUrl":"https://github.com/EcoSphereNetwork/SmolDesk/edit/main/docs/api/protocols.md","tags":[],"version":"current","frontMatter":{"title":"Protocols","description":"WebSocket-Nachrichten des Signaling-Servers"},"sidebar":"docsSidebar","previous":{"title":"IPC Interface","permalink":"/SmolDesk/en/api/ipc-interface"},"next":{"title":"Testing Strategy","permalink":"/SmolDesk/en/testing/strategy"}}');var i=r(4848),s=r(8453);const d={title:"Protocols",description:"WebSocket-Nachrichten des Signaling-Servers"},c=void 0,l={},o=[{value:"Nachrichten vom Server",id:"nachrichten-vom-server",level:2},{value:"Nachrichten vom Client",id:"nachrichten-vom-client",level:2}];function h(e){const n={a:"a",code:"code",h2:"h2",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["Die Verbindung zwischen den Peers wird \xfcber einen WebSocket-Server vermittelt. Nach dem Verbindungsaufbau tauschen Client und Server JSON-Nachrichten mit einem ",(0,i.jsx)(n.code,{children:"type"})," Feld aus."]}),"\n",(0,i.jsx)(n.h2,{id:"nachrichten-vom-server",children:"Nachrichten vom Server"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Typ"}),(0,i.jsx)(n.th,{children:"Inhalt"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"welcome"})}),(0,i.jsxs)(n.td,{children:["Enth\xe4lt ",(0,i.jsx)(n.code,{children:"clientId"})," und ein zuf\xe4llig generiertes ",(0,i.jsx)(n.code,{children:"token"}),"."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"room-created"})}),(0,i.jsxs)(n.td,{children:["Best\xe4tigung nach ",(0,i.jsx)(n.code,{children:"create-room"})," mit der vergebenen ",(0,i.jsx)(n.code,{children:"roomId"}),"."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"room-joined"})}),(0,i.jsxs)(n.td,{children:["Best\xe4tigung nach ",(0,i.jsx)(n.code,{children:"join-room"})," sowie Liste vorhandener Peers."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"peer-joined"})}),(0,i.jsx)(n.td,{children:"Ein neuer Peer ist dem Raum beigetreten."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"peer-left"})}),(0,i.jsx)(n.td,{children:"Ein Peer hat den Raum verlassen."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"peer-disconnected"})}),(0,i.jsx)(n.td,{children:"Verbindung zu einem Peer ging verloren."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"room-left"})}),(0,i.jsx)(n.td,{children:"Best\xe4tigung nach Verlassen eines Raums."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"ice-candidate"}),", ",(0,i.jsx)(n.code,{children:"offer"}),", ",(0,i.jsx)(n.code,{children:"answer"})]}),(0,i.jsx)(n.td,{children:"Weiterleitung der jeweiligen WebRTC-Daten."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"pong"})}),(0,i.jsx)(n.td,{children:"Antwort auf einen Ping des Clients."})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"nachrichten-vom-client",children:"Nachrichten vom Client"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Typ"}),(0,i.jsx)(n.th,{children:"Beschreibung"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"create-room"})}),(0,i.jsxs)(n.td,{children:["Legt einen neuen Raum an. Optional kann eine ",(0,i.jsx)(n.code,{children:"roomId"})," \xfcbermittelt werden."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"join-room"})}),(0,i.jsx)(n.td,{children:"Tritt einem bestehenden Raum bei."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"leave-room"})}),(0,i.jsx)(n.td,{children:"Verlasse den aktuellen Raum."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"ice-candidate"})}),(0,i.jsx)(n.td,{children:"\xdcbermittelt ICE-Kandidaten an einen Peer."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"offer"})}),(0,i.jsx)(n.td,{children:"WebRTC Offer an einen Ziel-Peer."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"answer"})}),(0,i.jsx)(n.td,{children:"WebRTC Answer an einen Ziel-Peer."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"ping"})}),(0,i.jsx)(n.td,{children:"Lebenszeichen zur Verbindungs\xfcberwachung."})]})]})]}),"\n",(0,i.jsxs)(n.p,{children:["Das Protokoll ist textbasiert (JSON) und sieht keine Authentifizierung vor. Sicherheitsfunktionen befinden sich in der ",(0,i.jsx)(n.a,{href:"/SmolDesk/en/features/security",children:"Security"})," Komponente."]})]})}function a(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>d,x:()=>c});var t=r(6540);const i={},s=t.createContext(i);function d(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);