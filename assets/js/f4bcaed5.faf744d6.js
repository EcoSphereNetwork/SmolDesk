"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3267],{7953:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>d,default:()=>h,frontMatter:()=>c,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"docs/components/ConnectionManager","title":"ConnectionManager","description":"","source":"@site/docs/components/ConnectionManager.md","sourceDirName":"docs/components","slug":"/docs/components/ConnectionManager","permalink":"/SmolDesk/docs/components/ConnectionManager","draft":false,"unlisted":false,"editUrl":"https://github.com/EcoSphereNetwork/SmolDesk/edit/main/docs/docs/components/ConnectionManager.md","tags":[],"version":"current","frontMatter":{"title":"ConnectionManager","description":""}}');var r=t(4848),o=t(8453);const c={title:"ConnectionManager",description:""},d="ConnectionManager",i={},a=[{value:"Props",id:"props",level:2},{value:"Example",id:"example",level:3},{value:"Teststatus",id:"teststatus",level:3}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"connectionmanager",children:"ConnectionManager"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"/SmolDesk/docs/components/status",children:"Zur Status\xfcbersicht"})}),"\n",(0,r.jsx)(n.p,{children:"\u2705 Phase 2 abgeschlossen"}),"\n",(0,r.jsx)(n.p,{children:"Manages peer connections using WebRTC. It handles creating rooms, joining rooms and relaying streams to the RemoteScreen component."}),"\n",(0,r.jsx)(n.h2,{id:"props",children:"Props"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Name"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"signalingServer"})}),(0,r.jsx)(n.td,{children:"string"}),(0,r.jsx)(n.td,{children:"URL of the WebSocket signaling server"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"onConnected"})}),(0,r.jsx)(n.td,{children:"function"}),(0,r.jsx)(n.td,{children:"called with peerId on connect"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"onDisconnected"})}),(0,r.jsx)(n.td,{children:"function"}),(0,r.jsx)(n.td,{children:"called when connection closes"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"onStream"})}),(0,r.jsx)(n.td,{children:"function"}),(0,r.jsx)(n.td,{children:"receives incoming MediaStream"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"onError"})}),(0,r.jsx)(n.td,{children:"function"}),(0,r.jsx)(n.td,{children:"error handler"})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:'<ConnectionManager signalingServer="ws://localhost:5173" onStream={setStream} />\n'})}),"\n",(0,r.jsx)(n.h3,{id:"teststatus",children:"Teststatus"}),"\n",(0,r.jsxs)(n.p,{children:["Weitere Details findest du in ",(0,r.jsx)(n.code,{children:"tests/unit/ConnectionManager.test.tsx"}),", der grundlegende Render- und Ereignistests enth\xe4lt."]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>d});var s=t(6540);const r={},o=s.createContext(r);function c(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);