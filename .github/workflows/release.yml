name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version'
        required: true
        default: 'v1.0.0'

env:
  CARGO_TERM_COLOR: always

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Get version
        id: get_version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          release_name: SmolDesk ${{ steps.get_version.outputs.version }}
          draft: false
          prerelease: false

  build-packages:
    needs: create-release
    strategy:
      matrix:
        os: [ubuntu-20.04, ubuntu-22.04]
        include:
          - os: ubuntu-20.04
            target: x86_64-unknown-linux-gnu
            suffix: ubuntu20
          - os: ubuntu-22.04  
            target: x86_64-unknown-linux-gnu
            suffix: ubuntu22
    
    runs-on: ${{ matrix.os }}
    
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y \
            libssl-dev \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            libwebkit2gtk-4.0-dev \
            libxdo-dev \
            libvaapi-dev \
            libx11-dev \
            libxrandr-dev \
            libxss-dev

      - name: Install frontend dependencies
        run: npm ci

      - name: Build packages
        run: |
          npm run tauri build -- --target ${{ matrix.target }} --bundles deb,rpm,appimage

      - name: Generate checksums
        run: |
          cd src-tauri/target/release/bundle
          find . -name "*.deb" -o -name "*.rpm" -o -name "*.AppImage" | xargs sha256sum > checksums-${{ matrix.suffix }}.txt

      - name: Upload DEB package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: src-tauri/target/release/bundle/deb/smoldesk_${{ needs.create-release.outputs.version }}_amd64.deb
          asset_name: smoldesk_${{ needs.create-release.outputs.version }}_amd64_${{ matrix.suffix }}.deb
          asset_content_type: application/vnd.debian.binary-package

      - name: Upload RPM package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: src-tauri/target/release/bundle/rpm/smoldesk-${{ needs.create-release.outputs.version }}-1.x86_64.rpm
          asset_name: smoldesk-${{ needs.create-release.outputs.version }}-1.x86_64_${{ matrix.suffix }}.rpm
          asset_content_type: application/x-rpm

      - name: Upload AppImage
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: src-tauri/target/release/bundle/appimage/SmolDesk_${{ needs.create-release.outputs.version }}_amd64.AppImage
          asset_name: SmolDesk_${{ needs.create-release.outputs.version }}_amd64_${{ matrix.suffix }}.AppImage
          asset_content_type: application/x-executable

      - name: Upload checksums
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: src-tauri/target/release/bundle/checksums-${{ matrix.suffix }}.txt
          asset_name: checksums-${{ matrix.suffix }}.txt
          asset_content_type: text/plain

  build-signaling-server:
    needs: create-release
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: signaling-server/package-lock.json

      - name: Build signaling server
        run: |
          cd signaling-server
          npm ci --production
          tar -czf smoldesk-signaling-server-${{ needs.create-release.outputs.version }}.tar.gz .

      - name: Upload signaling server
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: signaling-server/smoldesk-signaling-server-${{ needs.create-release.outputs.version }}.tar.gz
          asset_name: smoldesk-signaling-server-${{ needs.create-release.outputs.version }}.tar.gz
          asset_content_type: application/gzip
