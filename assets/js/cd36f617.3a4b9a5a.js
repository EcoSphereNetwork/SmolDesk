"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5213],{3416:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"docs/development/phase-4-report","title":"Phase 4 Report","description":"","source":"@site/docs/development/phase-4-report.md","sourceDirName":"docs/development","slug":"/docs/development/phase-4-report","permalink":"/SmolDesk/docs/development/phase-4-report","draft":false,"unlisted":false,"editUrl":"https://github.com/EcoSphereNetwork/SmolDesk/edit/main/docs/docs/development/phase-4-report.md","tags":[],"version":"current","frontMatter":{"title":"Phase 4 Report","description":""}}');var i=t(4848),o=t(8453);const r={title:"Phase 4 Report",description:""},a="Phase 4 Report",c={},d=[{value:"Tested Scenarios",id:"tested-scenarios",level:2},{value:"CI Integration",id:"ci-integration",level:2},{value:"Remaining Issues",id:"remaining-issues",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"phase-4-report",children:"Phase 4 Report"})}),"\n",(0,i.jsxs)(n.p,{children:["Phase 4 introduced a mockable IPC layer and an initial suite of Playwright end-to-end tests. WebRTC and Tauri window APIs are replaced with mocks when ",(0,i.jsx)(n.code,{children:"VITE_USE_MOCK=true"})," allowing reliable offline and error simulations."]}),"\n",(0,i.jsx)(n.h2,{id:"tested-scenarios",children:"Tested Scenarios"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Connection errors using ",(0,i.jsx)(n.code,{children:"connection.error"})," mocks"]}),"\n",(0,i.jsxs)(n.li,{children:["Offline mode with ",(0,i.jsx)(n.code,{children:"context.setOffline(true)"})]}),"\n",(0,i.jsx)(n.li,{children:"Multi window navigation and window controls"}),"\n",(0,i.jsx)(n.li,{children:"Visual regression via screenshot snapshots"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["The e2e tests wait for the ",(0,i.jsx)(n.code,{children:"main-window"})," selector and scroll elements into view before taking full page screenshots. In CI the suite falls back to simple screenshot existence checks."]}),"\n",(0,i.jsx)(n.h2,{id:"ci-integration",children:"CI Integration"}),"\n",(0,i.jsx)(n.p,{children:"The GitHub Actions workflow runs the Playwright suite with mocked IPC calls. Rust tests remain disabled until a dedicated container is available. Coverage reports are uploaded for the Node job."}),"\n",(0,i.jsx)(n.h2,{id:"remaining-issues",children:"Remaining Issues"}),"\n",(0,i.jsxs)(n.p,{children:["Snapshots may still diverge on some systems due to inconsistent font rendering. The Rust build fails during ",(0,i.jsx)(n.code,{children:"cargo test"})," and is tracked in ",(0,i.jsx)(n.a,{href:"../../../.github/issues/phase-4-reactivate-cargo-test.md",children:"Phase 4: Reactivate cargo test"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"Phase 4 is now complete and the project is ready to continue with component level validations in Storybook."})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var s=t(6540);const i={},o=s.createContext(i);function r(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);